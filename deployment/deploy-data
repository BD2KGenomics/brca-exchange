#!/bin/bash
set -o nounset
set -o errexit

# This script expects two arguments:

# 1. Environment (beta or production)

# 2. A path to a release directory of the format release-{mm-dd-yy} containing
#    built_with_change_types.tsv, removed.tsv, version.json, diff.json, reports.tsv,
#    and release-{mm-dd-yy}.tar.gz.

# Example:

# Running `./deployment/deploy-data beta PATH/TO/release-10-06-16`
# would add the 10-06-16 release to the beta database and put files in the correct
# locations for access, storage and download.

HOST=${HOST:-brcaexchange.cloudapp.net}
USER=brca


# Expects environment (local,beta or production) as first argument.
ENVIRONMENT=$1
if [ "${ENVIRONMENT}" != "beta" ] && [ "${ENVIRONMENT}" != "production" ] && [ "${ENVIRONMENT}" != "local" ]  ;then
    echo "ERROR: Please only enter 'local', 'beta' or 'production' as environment."
    exit 1
fi

# Expects path to release directory as second argument. Removes trailing / if present.
RELEASEDIRECTORYPATH=$2
if [ "${RELEASEDIRECTORYPATH: -1}" == "/" ] ;then
    RELEASEDIRECTORYPATH=${RELEASEDIRECTORYPATH%?}
fi

RELEASEDIRECTORY=$(basename $RELEASEDIRECTORYPATH)

if [ "${ENVIRONMENT}" == "local" ] ;then
	# Get deployment directory to have relative path to addrelease script
	DEPLOYMENTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

	# Get absolute release file paths
	cd "$RELEASEDIRECTORYPATH"
	ABSOLUTERELEASEDIR="$PWD"
    DATA=$ABSOLUTERELEASEDIR/built_with_change_types.tsv
	REMOVED=$ABSOLUTERELEASEDIR/removed.tsv
	METADATA=$ABSOLUTERELEASEDIR/version.json
	DIFFJSON=$ABSOLUTERELEASEDIR/diff.json
	REPORTS=$ABSOLUTERELEASEDIR/reports.tsv

	# Call addrelease
	cd "$DEPLOYMENTDIR"
	python ../website/django/manage.py addrelease ${DATA} ${REPORTS} ${METADATA} ${REMOVED} ${DIFFJSON}
fi

if [ "${ENVIRONMENT}" != "beta" ] || [ "${ENVIRONMENT}" != "production" ] ;then

	REMOTERELEASES=/var/www/backend/${ENVIRONMENT}/django/downloads/releases

	# Copies directory to downloads/releases/
	rsync -a --rsync-path='sudo rsync' $RELEASEDIRECTORYPATH ${USER}@${HOST}:$REMOTERELEASES/

	# Locations of files on remote server
	DATA=$REMOTERELEASES/$RELEASEDIRECTORY/built_with_change_types.tsv
	REMOVED=$REMOTERELEASES/$RELEASEDIRECTORY/removed.tsv
	METADATA=$REMOTERELEASES/$RELEASEDIRECTORY/version.json
	DIFFJSON=$REMOTERELEASES/$RELEASEDIRECTORY/diff.json
	REPORTS=$REMOTERELEASES/$RELEASEDIRECTORY/reports.tsv

	ssh -l${USER} ${HOST} <<-ENDSSH
	    set -o errexit
	    . /var/www/backend/${ENVIRONMENT}/virtualenv/bin/activate
	    python /var/www/backend/${ENVIRONMENT}/django/manage.py addrelease ${DATA} ${REPORTS} ${METADATA} ${REMOVED} ${DIFFJSON}
	    sudo rm /var/www/backend/${ENVIRONMENT}/django/downloads/releases/current_release.tar.gz
	    find /var/www/backend/${ENVIRONMENT}/django/downloads/releases/${RELEASEDIRECTORY}/ -name 'release*.tar.gz' -exec cp {} /var/www/backend/${ENVIRONMENT}/django/downloads/releases/current_release.tar.gz  \;
	ENDSSH
fi
