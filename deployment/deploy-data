#!/bin/bash
set -o nounset
set -o errexit

# This script expects a release directory of the format release-{mm-dd-yy} containing
# built_with_change_types.tsv, removed.tsv, version.json, and release-{mm-dd-yy}.tar.gz
# as its first argument.

# E.G. running `./deployment/deploy-data PATH/TO/release-10-06-16`
# would add the 10-06-16 release to the database, and put files in the correct
# locations for access, storage and download.

# BETA
HOST=${HOST:-brcaexchange.cloudapp.net}
USER=brca

# directory of this file
DEPLOYMENT="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
WEBSITE=${DEPLOYMENT}/../website

# Expects path to release directory as the first argument when running this script
RELEASEDIRECTORYPATH=$1
RELEASEDIRECTORY=$(basename $RELEASEDIRECTORYPATH)
REMOTERELEASES="/var/www/backend/beta/django/downloads/releases"

cd ${WEBSITE}

# deploy
# Copies directory to downloads/releases/
rsync -a --rsync-path='sudo rsync' $RELEASEDIRECTORYPATH ${USER}@${HOST}:$REMOTERELEASES/

# Locations of files on remote server
DATA=$REMOTERELEASES/$RELEASEDIRECTORY/built_with_change_types.tsv
REMOVED=$REMOTERELEASES/$RELEASEDIRECTORY/removed.tsv
METADATA=$REMOTERELEASES/$RELEASEDIRECTORY/version.json

ssh -l${USER} ${HOST} <<-ENDSSH
    set -o errexit
    . /var/www/backend/beta/virtualenv/bin/activate
    python /var/www/backend/beta/django/manage.py addrelease ${DATA} ${METADATA} ${REMOVED}
ENDSSH
