#!/bin/bash

ECHO=echo
DEBUG=false
SEMVER=./node_modules/.bin/semver
PREID=alpha

DIR=$(dirname "${BASH_SOURCE[0]}")
cd ${DIR}/../website

# Horrible work-around for 'npm version'
# https://github.com/npm/npm/issues/9111
npmversion() {
    if [ ! -e  .git ]; then
	mkdir .git
	npm version "$@"
	rmdir .git
    else
	npm version "$@"
    fi
}


VERSION="$(node -e "console.log(require('./package.json').version)")"

FAILED=false

run() {
	msg="$1"
	shift
	cmd="$@"
	${ECHO} ${msg}
	if ${DEBUG}; then
		echo "> $cmd"
	elif ${FAILED}; then
		echo "'${cmd}' skipped due to earlier error."
    else
		eval "$cmd" || { echo "Error $? running '${cmd}'"; FAILED=true; }
	fi
}

testing() {
	if git diff-index --quiet HEAD --; then
    	echo "DIFF STUFF"
	else
    	echo "NO DIFF STUFF"
	fi
}

new() {
	BRANCH=$(${SEMVER} -i minor ${VERSION})
	run "Creating release branch ${BRANCH}" git checkout -b ${BRANCH}
	run "Tagging release" npmversion minor
	run "Incrementing master version" git checkout master
	run "" npmversion $(${SEMVER} --preid ${PREID} -i preminor ${VERSION})
	run "Pushing to origin" git push origin --tags master ${BRANCH}
#	run "Publishing" git checkout ${BRANCH}
#	run "" npm publish
}

patch() {
	local release="$2"
	run "Checking out release branch ${release}" git checkout ${release}
	run "Tagging release" npmversion patch
	run "Pushing to origin" git push origin --tags ${release}
#	run "Publishing" npm publish
	run "" git checkout master
}

major() {
	run "Incrementing master version" git checkout master
	run "" npmversion $(${SEMVER} --preid ${PREID} -i premajor ${VERSION})
	run "Pushing to origin" git push origin --tags master
}

usage() {
	cat <<EOF
Usage
$0 [-n] [-q] new | patch <release-branch> | major

new: Run when ready to release a new version. Creates a new release branch,
	tags, and pushes to origin.  Increments minor verion on master.
patch: Run when ready to release a patch on release-branch. Creates a new patch
	release tag on release-branch, and pushes to origin.
major: Run when commits have made the lib incompatible with previous releases.
	Increments major version on master, pushes to origin.

-n: Echo commands that would be run. Don't execute them.
-q: Silent operation.
EOF
}

if [ "$1" == "-n" ]; then
    DEBUG=true;
    shift;
fi

if [ "$1" == "-q" ]; then
    ECHO=false;
    shift;
fi

cmd="$1"

case "$cmd" in
    new) new;;
    patch) patch "$@";;
    major) major;;
	testing) testing;;
    "") usage;;
    *) usage;;
esac
