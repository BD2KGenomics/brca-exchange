from django.db import models


class VariantManager(models.Manager):
    def create_variant(self, row):
        return self.create(**row)


class Variant(models.Model):
    variant_in_enigma = models.BooleanField()
    variant_in_clinvar = models.BooleanField()
    variant_in_1000_genomes = models.BooleanField()
    variant_in_exac = models.BooleanField()
    variant_in_lovd = models.BooleanField()
    variant_in_bic = models.BooleanField()
    gene_symbol = models.TextField()
    genomic_coordinate = models.TextField()
    hgvs_genomic = models.TextField()
    transcript_id = models.TextField()
    hgvs_cdna = models.TextField()
    hgvs_protein = models.TextField()
    bic_nomenclature = models.TextField()
    abbrev_aa_change = models.TextField()
    url = models.TextField()
    condition_id_type = models.TextField()
    condition_id_value = models.TextField()
    condition_category = models.TextField()
    clinical_significance = models.TextField()
    date_last_evaluated = models.TextField()
    assertion_method = models.TextField()
    assertion_method_citation = models.TextField()
    clinical_significance_citations = models.TextField()
    comment_on_clinical_significance = models.TextField()
    collection_method = models.TextField()
    allele_origin = models.TextField()
    clinvaraccession = models.TextField()
    sas_allele_frequency_1000_genomes = models.TextField()
    eas_allele_frequency_1000_genomes = models.TextField()
    allele_frequency_1000_genomes = models.TextField()
    amr_allele_frequency_1000genomes = models.TextField()
    eur_allele_frequency_1000genomes = models.TextField()
    afr_allele_frequency_1000genomes = models.TextField()
    allele_origin_clinvar = models.TextField()
    variant_clinical_significance_clinvar = models.TextField()
    hgvs_genomic_lovd = models.TextField()
    origin_of_variant_lovd = models.TextField()
    hgvs_protein_lovd = models.TextField()
    variant_frequency_lovd = models.TextField()
    hgvs_cdna_lovd = models.TextField()
    variant_affecting_protein_lovd = models.TextField()
    variant_haplotype_lovd = models.TextField()
    vep_gene_exac = models.TextField()
    allele_frequency_exac = models.TextField()
    vep_hgvsc_exac = models.TextField()
    vep_consequence_exac = models.TextField()
    vep_hgvsp_exac = models.TextField()
    exon_number_exlovd = models.TextField()
    iarc_class_exlovd = models.TextField()
    bic_exlovd = models.TextField()
    hgvs_cdna_exlovd = models.TextField()
    literature_source_exlovd = models.TextField()
    hgvs_protein_exlovd = models.TextField()
    number_of_family_member_carrying_mutation_bic = models.TextField()
    hgvs_genomic_bic = models.TextField()
    germline_or_somatic_bic = models.TextField()
    mutation_type_bic = models.TextField()
    bic_designation_bic = models.TextField()
    literature_citation_bic = models.TextField()
    exon_number_bic = models.TextField()
    clinical_importance_bic = models.TextField()
    clinical_classification_bic = models.TextField()
    hgvs_protein_bic = models.TextField()
    hgvs_cdna_bic = models.TextField()
    ethnicity_bic = models.TextField()
    patient_nationality_bic = models.TextField()

    objects = VariantManager()

    class Meta:
        db_table = 'variant'
